using System;
using System.IO;
using System.Text;
using System.Collections.Generic;

namespace ngenstrings
{
	/// <summary>
	/// Dictionary of keys with default values and comments;
	/// sorted so that it is easy to compare in a file diff tool.
	/// </summary>
	public class LocalizedStringTable : SortedDictionary<string,LocalizedString>
	{
		/// <summary>strings</summary>
		const string DEFAULT_FILE_EXTENSION = "strings";

		const string FILE_HEADER = "File generated by ngenstrings from assembly {0} on {1}";
		const string FILE_FOOTER = "";

		public string FileName
		{ get; private set; }
		public LocalizedStringTable (string fileName)
		{
			FileName = fileName;
		}

		public bool WriteStringsFile (string fromAssemblyName)
		{
			var sb = new StringBuilder();

			sb.Append(String.Format("/* " + FILE_HEADER + " */\n\n"
				, fromAssemblyName
				, DateTime.Now.ToLongDateString() + " " + DateTime.Now.ToLongTimeString() ));

			foreach (var ls in this.Values)
			{
				if (!ls.IsEmpty)
				{
					sb.Append(
						  string.Format("/* {2} */\n\"{0}\" = \"{1}\";\n\n"
						, this.EscapeCStyleText(ls.Key)
						, this.EscapeCStyleText(ls.Value)
						, this.EscapeCStyleComment(ls.Comment))
					);
				}
			}

			sb.Append(FILE_FOOTER);


			var filename = CombineFilenameExtension(FileName, DEFAULT_FILE_EXTENSION);
			string s = sb.ToString();
			//File.WriteAllText(filename
			//	,LocalizedString.FileHeaderString (fromAssemblyName) 
			//	,Encoding.UTF8);
			File.WriteAllText(filename, s, Encoding.UTF8);
			Console.WriteLine(String.Format("File '{0}' written.", filename));
			return true;
		}
		private string CombineFilenameExtension (string filename, string extension)
		{
			return filename + "." + extension;
		}
		private string EscapeCStyleComment (string comment)
		{
			comment = comment.Replace("/*","/ *");
			comment = comment.Replace("*/","* /");
			return comment;
		}
		private string EscapeCStyleText (string text)
		{
			text = text.Replace("\n","\\n");  // newline
			text = text.Replace("\"","\\\""); // quotes
			return text;
		}
	}
}
